# This file is for use with a CodeBuild project that runs on Windows (image: aws/codebuild/windows-base:2019-3.0)
# Syntax has been adjusted to use PoowerShell instead of Bash
version: 0.2

env:
  variables:
    # Github username of the forked repo on which to make builds
    GITHUBUSERNAME: Ephylouise

phases:
  build:
    commands:
      - $env:WINDOWS_EXE = "amazon-ecs-agent.exe"
      - Write-Output $(pwd) 2>&1 | Tee-Object -Append $env:BUILD_LOG

      # Path readjustment for codebuild testing with fork and setting GOPATH appropriately
      - cd ../../../..
      - $env:GOPATH = "$env:GOPATH;$(pwd)"
      - cd src/github.com
      - |
        if ($env:GITHUBUSERNAME -ne "aws") {
          Move-Item $env:GITHUBUSERNAME aws
        }
      - cd aws\amazon-ecs-agent
      - $env:GO111MODULE = "auto"

      # Build Windows executable
      - Write-Output "Building agent image from a clean snapshot of the git repo using 'docker-release'" 2>&1 | Tee-Object -Append $env:BUILD_LOG
      - make docker-release TARGET_OS="windows" 2>&1 | Tee-Object -Append $env:BUILD_LOG

      # Verify the output directory and artifact location
      - ls -l .\out
      - Write-Output "Location of amazon-ecs-agent.exe:"
      - Get-ChildItem -Path . -Filter "amazon-ecs-agent.exe" -Recurse | Select-Object FullName
      - Write-Output "The source code directory path is:"
      - Write-Output $env:CODEBUILD_SRC_DIR
      - ls

  post_build:
    commands:

artifacts:
  files:
    - $env:CODEBUILD_SRC_DIR\amazon-ecs-agent.exe
  name: $env:CODEBUILD_RESOLVED_SOURCE_VERSION