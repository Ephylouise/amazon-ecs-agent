version: 0.2

env:
  variables:
    # Github username of the forked repo on which to make builds
    GITHUBUSERNAME: Ephylouise

phases:
  install:
    commands:
      - architecture=""
      # Same buildspec for different architectures - detect the architecture here and rename the artifacts accordingly
      - case $(uname -m) in
           x86_64)
             architecture="amd64"
           ;;
           aarch64)
             architecture="arm64"
           ;;
        esac
      # The GO_VERSION is pulling from the wrong branch, Codebuild shows version 1.20.12, possible from branch "27ca59a",
      # but the correct one is located at amazon-ecs-agent/GO_VERSION on the branch that codebuild is running on
      # (which is the default branch for the project)
      # Add echo to find which branch and file Codebuild is pulling the GO_VERSION from
      - echo "GO_VERSION file location $(pwd)/GO_VERSION"
      - GOVERSION="$(cat GO_VERSION)"
      - echo "GO_VERSION is $(cat GO_VERSION)"

      - distribution_release_al2023=$(curl -s https://al2023-repos-us-west-2-de612dc2.s3.dualstack.us-west-2.amazonaws.com/core/releasemd.xml | xmllint --xpath "string(//root/releases/release[last()]/@version)" -)


      # Use if/then function to install go version depending on Amazon Linux version
      - |
        if [[ "$CODEBUILD_BUILD_IMAGE" == *"amazonlinux:2023"* ]]; then
          sudo dnf --releasever="2023" install -y golang-${GOVERSION}
        fi

      - sudo rm -rf /root/.goenv # removes default goroot for AMD build
      - sudo rm -rf /usr/local/go/bin/go # removes default goroot for ARM build
      - BUILD_LOG="build_${architecture}.log"
      - which go | tee -a $BUILD_LOG
      - go version | tee -a $BUILD_LOG
      
  build:
    commands:
      - echo "build_id = $CODEBUILD_LOG_PATH" 2>&1 | tee -a $BUILD_LOG
      - echo "Building agent image" 2>&1 | tee -a $BUILD_LOG
      - AGENT_VERSION=$(cat VERSION)
      - AMZN_LINUX_2_RPM="ecs-init-${AGENT_VERSION}-1.amzn2.x86_64.rpm"
      - AMZN_LINUX_2023_RPM="ecs-init-${AGENT_VERSION}-1.amzn2023.x86_64.rpm"
      - echo $(pwd) 2>&1 | tee -a $BUILD_LOG

      # Path readjustment for codebuild testing with fork and setting GOPATH appropriately
      - cd ../../../..
      - export GOPATH=$GOPATH:$(pwd)
      - cd src/github.com
      - |
        if [[ $GITHUBUSERNAME != "aws" ]]; then
          mv $GITHUBUSERNAME aws
        fi
      - cd aws/amazon-ecs-agent

      # Build Amazon Linux 2 RPM
      - GO111MODULE=auto
      - make amazon-linux-rpm-integrated 2>&1 | tee -a $BUILD_LOG
      - ls
      
      # Rename artifacts for architecture
      - |
        if [[ $architecture == "arm64" ]] ; then
          AMZN_LINUX_2_RPM="ecs-init-${AGENT_VERSION}-1.amzn2.aarch64.rpm"
          AMZN_LINUX_2023_RPM="ecs-init-${AGENT_VERSION}-1.amzn2023.aarch64.rpm"
        fi
      - echo $(pwd) 2>&1 | tee -a $BUILD_LOG

  post_build:
    commands:

artifacts:
  files:
    - $AMZN_LINUX_2_RPM
    - $AMZN_LINUX_2023_RPM
    - $BUILD_LOG
  name: $CODEBUILD_RESOLVED_SOURCE_VERSION

